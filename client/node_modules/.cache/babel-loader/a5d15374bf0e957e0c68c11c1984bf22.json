{"ast":null,"code":"var _jsxFileName = \"/Users/federicoloupias/Documents/GitHub/my-app/client/src/component/Register.jsx\";\nimport React, { Component } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Label, Input, NavLink, Alert } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { register } from '../actions/authActions';\nimport { clearErrors } from '../actions/errorsActions';\n\nclass Register extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      modal: false,\n      name: '',\n      email: '',\n      password: '',\n      firstName: '',\n      lastName: '',\n      country: '',\n      msg: null,\n      checkbox: false\n    };\n\n    this.showRegister = c => {\n      if (c === true) {\n        React.createElement(Button, {\n          color: \"dark\",\n          style: {\n            marginTop: '2rem'\n          },\n          block: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, \"Register\");\n      }\n    };\n\n    this.toggle = () => {\n      // Clear errors\n      this.props.clearErrors();\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const _this$state = this.state,\n            name = _this$state.name,\n            email = _this$state.email,\n            password = _this$state.password,\n            firstName = _this$state.firstName,\n            lastName = _this$state.lastName,\n            country = _this$state.country,\n            checkbox = _this$state.checkbox; //create user object\n\n      const newUser = {\n        name,\n        email,\n        password,\n        firstName,\n        lastName,\n        country,\n        checkbox\n      };\n      console.log(newUser.checkbox); // Attempt to register\n\n      this.props.register(newUser);\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const _this$props = this.props,\n          error = _this$props.error,\n          isAuthenticated = _this$props.isAuthenticated;\n\n    if (error !== prevProps.error) {\n      // Check for register error\n      if (error.id === 'REGISTER_FAIL') {\n        this.setState({\n          msg: error.msg.msg\n        });\n      } else {\n        this.setState({\n          msg: null\n        });\n      }\n    } // If authenticated, close modal\n\n\n    if (this.state.modal) {\n      if (isAuthenticated) {\n        this.toggle();\n      }\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      onClick: this.toggle,\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Register\"), React.createElement(Modal, {\n      isOpen: this.state.modal,\n      toggle: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      toggle: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Register\"), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, this.state.msg ? React.createElement(Alert, {\n      color: \"danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, this.state.msg) : null, React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"userName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"UserName\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"name\",\n      id: \"name\",\n      placeholder: \"Name\",\n      className: \"mb-3\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), React.createElement(Label, {\n      for: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Email\"), React.createElement(Input, {\n      type: \"email\",\n      name: \"email\",\n      id: \"email\",\n      placeholder: \"Email\",\n      className: \"mb-3\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(Label, {\n      for: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Password\"), React.createElement(Input, {\n      type: \"password\",\n      name: \"password\",\n      id: \"password\",\n      placeholder: \"Password\",\n      className: \"mb-3\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), React.createElement(Label, {\n      for: \"firstName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"First Name\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"firstName\",\n      id: \"firstName\",\n      placeholder: \"First Name\",\n      className: \"mb-3\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), React.createElement(Label, {\n      for: \"lastName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"Last Name\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"lastName\",\n      id: \"lastName\",\n      placeholder: \"Last Name\",\n      className: \"mb-3\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"input-group mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group-prepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"input-group-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"Country\")), React.createElement(\"select\", {\n      className: \"custom-select\",\n      id: \"country\",\n      name: \"country\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      defaultValue: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"Choose Country\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"England\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"France\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, \"Germany\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"Holand\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"Ireland\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, \"Spain\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \"United State\"))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"checkbox\",\n      name: \"checkbox\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, \"I agree to MYtinerary's \", React.createElement(\"a\", {\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, \"Terms & Conditions\"))), this.showRegister(this.state.checkbox))))));\n  }\n\n}\n\nRegister.propTypes = {\n  isAuthenticated: PropTypes.bool,\n  error: PropTypes.object.isRequired,\n  register: PropTypes.func.isRequired,\n  clearErrors: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error\n});\n\nexport default connect(mapStateToProps, {\n  register,\n  clearErrors\n})(Register);","map":{"version":3,"sources":["/Users/federicoloupias/Documents/GitHub/my-app/client/src/component/Register.jsx"],"names":["React","Component","Button","Modal","ModalHeader","ModalBody","Form","FormGroup","Label","Input","NavLink","Alert","connect","PropTypes","register","clearErrors","Register","state","modal","name","email","password","firstName","lastName","country","msg","checkbox","showRegister","c","marginTop","toggle","props","setState","onChange","e","target","value","onSubmit","preventDefault","newUser","console","log","componentDidUpdate","prevProps","error","isAuthenticated","id","render","propTypes","bool","object","isRequired","func","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  NavLink,\n  Alert\n} from 'reactstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { register } from '../actions/authActions';\nimport { clearErrors } from '../actions/errorsActions';\n\nclass Register extends Component {\n  state = {\n    modal: false,\n    name:'',\n    email: '',\n    password: '',\n    firstName:'',\n    lastName:'',\n    country:'',\n    msg: null,\n    checkbox: false\n  };\n\n  static propTypes = {\n    isAuthenticated: PropTypes.bool,\n    error: PropTypes.object.isRequired,\n    register: PropTypes.func.isRequired,\n    clearErrors: PropTypes.func.isRequired\n  };\n\n  componentDidUpdate(prevProps) {\n    const { error, isAuthenticated } = this.props;\n    if (error !== prevProps.error) {\n      // Check for register error\n      if (error.id === 'REGISTER_FAIL') {\n        this.setState({ msg: error.msg.msg });\n      } else {\n        this.setState({ msg: null });\n      }\n    }\n\n    // If authenticated, close modal\n    if (this.state.modal) {\n      if (isAuthenticated) {\n        this.toggle();\n      }\n    }\n  }\n\n  showRegister = (c) =>{\n    if (c===true) {\n      <Button color='dark' style={{ marginTop: '2rem' }} block>\n                  Register\n                </Button>\n    }\n  }\n\n  toggle = () => {\n    // Clear errors\n    this.props.clearErrors();\n    this.setState({\n      modal: !this.state.modal\n    });\n  };\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const { name, email, password, firstName, lastName, country, checkbox } = this.state;\n\n    //create user object\n    const newUser = {\n      name,\n      email,\n      password,\n      firstName,\n      lastName,\n      country,\n      checkbox\n    };\n\n    console.log(newUser.checkbox)\n\n    // Attempt to register\n    this.props.register(newUser);\n  };\n\n  render() {\n    return (\n      <div>\n        <NavLink onClick={this.toggle} href='#'>\n          Register\n        </NavLink>\n\n        <Modal isOpen={this.state.modal} toggle={this.toggle}>\n          <ModalHeader toggle={this.toggle}>Register</ModalHeader>\n          <ModalBody>\n            {this.state.msg ? (\n              <Alert color='danger'>{this.state.msg}</Alert>\n            ) : null}\n            <Form onSubmit={this.onSubmit}>\n              <FormGroup>\n              <Label for='userName'>UserName</Label>\n                <Input\n                  type='text'\n                  name='name'\n                  id='name'\n                  placeholder='Name'\n                  className='mb-3'\n                  onChange={this.onChange}\n                />\n\n                <Label for='email'>Email</Label>\n                <Input\n                  type='email'\n                  name='email'\n                  id='email'\n                  placeholder='Email'\n                  className='mb-3'\n                  onChange={this.onChange}\n                />\n\n                <Label for='password'>Password</Label>\n                <Input\n                  type='password'\n                  name='password'\n                  id='password'\n                  placeholder='Password'\n                  className='mb-3'\n                  onChange={this.onChange}\n                />\n\n                <Label for='firstName'>First Name</Label>\n                <Input\n                  type='text'\n                  name='firstName'\n                  id='firstName'\n                  placeholder='First Name'\n                  className='mb-3'\n                  onChange={this.onChange}\n                />\n\n                <Label for='lastName'>Last Name</Label>\n                <Input\n                  type='text'\n                  name='lastName'\n                  id='lastName'\n                  placeholder='Last Name'\n                  className='mb-3'\n                  onChange={this.onChange}\n                />\n\n<div className=\"input-group mb-3\">\n  <div className=\"input-group-prepend\">\n    <label className=\"input-group-text\" >Country</label>\n  </div>\n  \n  <select className=\"custom-select\" \n            id=\"country\" \n            name='country'\n            onChange={this.onChange}>\n  \n      <option defaultValue>Choose Country</option>\n    \n      <option>England</option>\n      <option>France</option>\n      <option>Germany</option>\n      <option>Holand</option>\n      <option>Ireland</option>\n      <option>Spain</option>\n      <option>United State</option>\n  </select>\n</div>\n\n<div>\n\n      <input type=\"checkbox\" \n      id=\"checkbox\" \n      name=\"checkbox\" \n      onChange={this.onChange}\n      /> \n      <span>I agree to MYtinerary's <a href=\"#\">Terms & Conditions</a></span>\n    \n</div>\n              {this.showRegister(this.state.checkbox)}\n                \n              </FormGroup>\n            </Form>\n          </ModalBody>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error\n});\n\nexport default connect(\n  mapStateToProps,\n  { register, clearErrors }\n)(Register);"]},"metadata":{},"sourceType":"module"}