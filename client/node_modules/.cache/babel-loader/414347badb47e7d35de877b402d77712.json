{"ast":null,"code":"var _jsxFileName = \"/Users/federicoloupias/Documents/GitHub/my-app/client/src/component/Itinerary.jsx\";\nimport React, { Component } from 'react';\nimport { ListGroup, ListGroupItem } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { getItineraries } from '../actions/itineraryActions';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport ButtonBase from '@material-ui/core/ButtonBase';\n\nclass ItineraryList extends Component {\n  async componentDidMount() {\n    let cityId = this.props.match.params.cityId;\n    await this.props.getItineraries(cityId);\n  }\n\n  render() {\n    // const { itineraries } = this.props.itineraries;\n    return React.createElement(ListGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, this.props.itineraries.map(itineraries => React.createElement(ListGroupItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \" \", itineraries.title, \" \")));\n  }\n\n} // ItineraryList.propTypes = {\n//     getItineraries: PropTypes.func.isRequired,\n//     itineraries: PropTypes.object.isRequired\n// }\n\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    itineraries: state.itinerario.itineraries\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getItineraries: cityId => dispatch(getItineraries(cityId))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ItineraryList);","map":{"version":3,"sources":["/Users/federicoloupias/Documents/GitHub/my-app/client/src/component/Itinerary.jsx"],"names":["React","Component","ListGroup","ListGroupItem","connect","getItineraries","makeStyles","Grid","Paper","Typography","ButtonBase","ItineraryList","componentDidMount","cityId","props","match","params","render","itineraries","map","title","mapStateToProps","state","console","log","itinerario","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,EAAoBC,aAApB,QAAyC,YAAzC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,6BAA/B;AAEA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;;AAEA,MAAMC,aAAN,SAA4BV,SAA5B,CAAqC;AAEjC,QAAMW,iBAAN,GAA0B;AACxB,QAAIC,MAAM,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAArC;AACC,UAAM,KAAKC,KAAL,CAAWT,cAAX,CAA0BQ,MAA1B,CAAN;AACF;;AAIDI,EAAAA,MAAM,GAAE;AACN;AAIE,WAEA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKH,KAAL,CAAWI,WAAX,CAAuBC,GAAvB,CAA4BD,WAAD,IAC5B,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAiBA,WAAW,CAACE,KAA7B,MADC,CADL,CAFA;AASH;;AAvBgC,C,CA0BrC;AACA;AACA;AACA;;;AAGA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,SAAO;AACLJ,IAAAA,WAAW,EAAEI,KAAK,CAACG,UAAN,CAAiBP;AADzB,GAAP;AAGD,CALD;;AAOA,MAAMQ,kBAAkB,GAAIC,QAAD,IAAc;AAEvC,SAAO;AACLtB,IAAAA,cAAc,EAAGQ,MAAD,IAAUc,QAAQ,CAACtB,cAAc,CAACQ,MAAD,CAAf;AAD7B,GAAP;AAGD,CALD;;AAOA,eAAeT,OAAO,CAACiB,eAAD,EAAkBK,kBAAlB,CAAP,CAA6Cf,aAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { ListGroup, ListGroupItem } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { getItineraries } from '../actions/itineraryActions';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport ButtonBase from '@material-ui/core/ButtonBase';\n\nclass ItineraryList extends Component{\n   \n    async componentDidMount() {\n      let cityId = this.props.match.params.cityId\n       await this.props.getItineraries(cityId)\n    }\n   \n\n\n    render(){\n      // const { itineraries } = this.props.itineraries;\n\n\n\n        return(\n\n        <ListGroup>\n            {this.props.itineraries.map((itineraries) => (\n            <ListGroupItem> {itineraries.title} </ListGroupItem>\n            ))}\n        </ListGroup>\n\n        );\n    }\n}\n\n// ItineraryList.propTypes = {\n//     getItineraries: PropTypes.func.isRequired,\n//     itineraries: PropTypes.object.isRequired\n// }\n\n\nconst mapStateToProps = (state) => {\n  console.log(state)\n  return {\n    itineraries: state.itinerario.itineraries\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  \n  return {\n    getItineraries: (cityId)=>dispatch(getItineraries(cityId))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ItineraryList);"]},"metadata":{},"sourceType":"module"}