{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\me\\\\Documents\\\\GitHub\\\\my-app\\\\client\\\\src\\\\component\\\\LogInRedux.jsx\";\nimport React from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { login } from '../actions/authActions';\nimport { Alert } from 'reactstrap';\nimport { clearErrors } from '../actions/errorsActions';\n\nclass LogInRedux extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: '',\n      password: '',\n      msg: null\n    };\n\n    this.getUsers = async () => {\n      const res = await axios.get('http://localhost:8080/api/users');\n      this.setState({\n        users: res.data\n      });\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onSubmit = async e => {\n      e.preventDefault();\n      /*const res = await axios.post('http://localhost:8080/api/auth/register', user)\r\n      \r\n        this.getUsers()\r\n        console.log(this.state.users)\r\n        this.setState({\r\n        username: '',\r\n        email:'',\r\n        password:''\r\n      })*/\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const _this$props = this.props,\n          error = _this$props.error,\n          isAuthenticated = _this$props.isAuthenticated;\n\n    if (error !== prevProps.error) {\n      //Check por el error del registro\n      if (error.id === 'LOGIN_FAIL') {\n        this.setState({\n          msg: error.msg.msg\n        });\n      } else {\n        this.setState({\n          msg: null\n        });\n      }\n    }\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Login---\"), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"control-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Email\"), React.createElement(\"input\", {\n      onChange: this.onChange,\n      type: \"email\",\n      name: \"email\",\n      id: \"email\",\n      placeholder: \"email\",\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"control-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      onChange: this.onChange,\n      type: \"password\",\n      name: \"password\",\n      id: \"password\",\n      placeholder: \"password\",\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    })), this.state.msg ? React.createElement(Alert, {\n      color: \"danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \" \", this.state.msg) : null, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-primary btn-lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Login\")));\n  }\n\n}\n\nLogInRedux.propTypes = {\n  isAuthenticated: PropTypes.bool,\n  error: PropTypes.object.isRequired,\n  login: PropTypes.func.isRequired,\n  clearErrors: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error\n});\n\nexport default connect(mapStateToProps, {\n  login,\n  clearErrors\n})(LogInRedux);","map":{"version":3,"sources":["C:/Users/me/Documents/GitHub/my-app/client/src/component/LogInRedux.jsx"],"names":["React","axios","connect","PropTypes","login","Alert","clearErrors","LogInRedux","Component","state","email","password","msg","getUsers","res","get","setState","users","data","onChange","e","target","name","value","onSubmit","preventDefault","componentDidUpdate","prevProps","props","error","isAuthenticated","id","render","propTypes","bool","object","isRequired","func","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { login } from '../actions/authActions';\r\nimport { Alert } from 'reactstrap';\r\nimport { clearErrors } from '../actions/errorsActions'\r\n\r\n\r\nclass LogInRedux extends React.Component{\r\n  state = {\r\n      email:'',\r\n      password:'',\r\n      msg: null\r\n    };\r\n\r\n    static propTypes = {\r\n        isAuthenticated:PropTypes.bool,\r\n        error: PropTypes.object.isRequired,\r\n        login: PropTypes.func.isRequired,\r\n        clearErrors: PropTypes.func.isRequired\r\n    }\r\n  \r\n    componentDidUpdate(prevProps){\r\n        const { error, isAuthenticated } = this.props;\r\n        if(error !== prevProps.error){\r\n            //Check por el error del registro\r\n            if(error.id === 'LOGIN_FAIL'){\r\n                this.setState({ msg: error.msg.msg })\r\n            } else{\r\n                this.setState({ msg:null })\r\n            }\r\n        }\r\n    }\r\n\r\n  \r\n\r\n  getUsers= async () =>{\r\n    const res = await axios.get ('http://localhost:8080/api/users');\r\n    this.setState({users: res.data});\r\n  }\r\n\r\n  onChange = e =>{\r\n    this.setState({ [e.target.name]: e.target.value })\r\n  }\r\n\r\n  onSubmit = async e =>{\r\n    e.preventDefault();\r\n  \r\n    \r\n    /*const res = await axios.post('http://localhost:8080/api/auth/register', user)\r\n    \r\n\r\n    this.getUsers()\r\n\r\n    console.log(this.state.users)\r\n\r\n    this.setState({\r\n      username: '',\r\n      email:'',\r\n      password:''\r\n    })*/\r\n\r\n\r\n  }\r\n\r\n\r\n    render(){\r\n        return( \r\n           \r\n        <form onSubmit= { this.onSubmit }>\r\n            <h1>Login---</h1>\r\n\r\n\r\n          \r\n\r\n          <div className=\"form-group\">\r\n            <label className=\"control-label\">Email</label>\r\n            <input\r\n              onChange= { this.onChange }\r\n              type=\"email\"\r\n              name=\"email\"\r\n              id=\"email\"\r\n              placeholder=\"email\"\r\n              className=\"form-control\"\r\n              />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label className=\"control-label\">Password</label>\r\n            <input\r\n              onChange= { this.onChange }\r\n              type=\"password\"\r\n              name=\"password\"\r\n              id=\"password\"\r\n              placeholder='password'\r\n              className=\"form-control\"\r\n              />\r\n          </div>\r\n\r\n            {this.state.msg ? (<Alert color='danger'> {this.state.msg}</Alert>) : null}\r\n          <div className=\"form-group\">\r\n            <button className=\"btn btn-primary btn-lg\">\r\n              Login\r\n            </button>\r\n          </div>\r\n\r\n\r\n        </form>\r\n        \r\n        );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    error: state.error\r\n});\r\n\r\n\r\n\r\nexport default connect(mapStateToProps,{ login, clearErrors })(LogInRedux);"]},"metadata":{},"sourceType":"module"}