{"ast":null,"code":"var _jsxFileName = \"/Users/federicoloupias/Documents/GitHub/my-app/client/src/component/Register.jsx\";\nimport React, { Component } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Label, Input, NavLink, Alert } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { register } from '../actions/authActions';\nimport { clearErrors } from '../actions/errorsActions';\n\nclass Register extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      modal: false,\n      name: '',\n      email: '',\n      password: '',\n      msg: null\n    };\n\n    this.toggle = () => {\n      // Clear errors\n      this.props.clearErrors();\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const _this$state = this.state,\n            name = _this$state.name,\n            email = _this$state.email,\n            password = _this$state.password; // Create user object\n\n      const newUser = {\n        name,\n        email,\n        password\n      }; // Attempt to register\n\n      this.props.register(newUser);\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const _this$props = this.props,\n          error = _this$props.error,\n          isAuthenticated = _this$props.isAuthenticated;\n\n    if (error !== prevProps.error) {\n      // Check for register error\n      if (error.id === 'REGISTER_FAIL') {\n        this.setState({\n          msg: error.msg.msg\n        });\n      } else {\n        this.setState({\n          msg: null\n        });\n      }\n    } // If authenticated, close modal\n\n\n    if (this.state.modal) {\n      if (isAuthenticated) {\n        this.toggle();\n      }\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      onClick: this.toggle,\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Register\"), React.createElement(Modal, {\n      isOpen: this.state.modal,\n      toggle: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      toggle: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Register\"), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, this.state.msg ? React.createElement(Alert, {\n      color: \"danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, this.state.msg) : null, React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"userName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Username\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"username\",\n      id: \"username\",\n      placeholder: \"Username\",\n      className: \"mb-3\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(Label, {\n      for: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Email\"), React.createElement(Input, {\n      type: \"email\",\n      name: \"email\",\n      id: \"email\",\n      placeholder: \"Email\",\n      className: \"mb-3\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(Label, {\n      for: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Password\"), React.createElement(Input, {\n      type: \"password\",\n      name: \"password\",\n      id: \"password\",\n      placeholder: \"Password\",\n      className: \"mb-3\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(Label, {\n      for: \"firstName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"First Name\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"firstName\",\n      id: \"firstName\",\n      placeholder: \"First Name\",\n      className: \"mb-3\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(Label, {\n      for: \"lastName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Last Name\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"lastName\",\n      id: \"lastName\",\n      placeholder: \"Last Name\",\n      className: \"mb-3\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"input-group mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group-prepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"input-group-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Country\")), React.createElement(\"select\", {\n      className: \"custom-select\",\n      id: \"country\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      defaultValue: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Choose Country\"), React.createElement(\"option\", {\n      name: \"country\",\n      id: \"country\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"England\"), React.createElement(\"option\", {\n      name: \"country\",\n      id: \"country\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"France\"), React.createElement(\"option\", {\n      name: \"country\",\n      id: \"country\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"Germany\"), React.createElement(\"option\", {\n      name: \"country\",\n      id: \"country\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"Holand\"), React.createElement(\"option\", {\n      name: \"country\",\n      id: \"country\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"Ireland\"), React.createElement(\"option\", {\n      name: \"country\",\n      id: \"country\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"Spain\"), React.createElement(\"option\", {\n      name: \"country\",\n      id: \"country\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \"United State\"))), React.createElement(Button, {\n      color: \"dark\",\n      style: {\n        marginTop: '2rem'\n      },\n      block: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"Register\"))))));\n  }\n\n}\n\nRegister.propTypes = {\n  isAuthenticated: PropTypes.bool,\n  error: PropTypes.object.isRequired,\n  register: PropTypes.func.isRequired,\n  clearErrors: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error\n});\n\nexport default connect(mapStateToProps, {\n  register,\n  clearErrors\n})(Register);","map":{"version":3,"sources":["/Users/federicoloupias/Documents/GitHub/my-app/client/src/component/Register.jsx"],"names":["React","Component","Button","Modal","ModalHeader","ModalBody","Form","FormGroup","Label","Input","NavLink","Alert","connect","PropTypes","register","clearErrors","Register","state","modal","name","email","password","msg","toggle","props","setState","onChange","e","target","value","onSubmit","preventDefault","newUser","componentDidUpdate","prevProps","error","isAuthenticated","id","render","marginTop","propTypes","bool","object","isRequired","func","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  NavLink,\n  Alert\n} from 'reactstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { register } from '../actions/authActions';\nimport { clearErrors } from '../actions/errorsActions';\n\nclass Register extends Component {\n  state = {\n    modal: false,\n    name: '',\n    email: '',\n    password: '',\n    msg: null\n  };\n\n  static propTypes = {\n    isAuthenticated: PropTypes.bool,\n    error: PropTypes.object.isRequired,\n    register: PropTypes.func.isRequired,\n    clearErrors: PropTypes.func.isRequired\n  };\n\n  componentDidUpdate(prevProps) {\n    const { error, isAuthenticated } = this.props;\n    if (error !== prevProps.error) {\n      // Check for register error\n      if (error.id === 'REGISTER_FAIL') {\n        this.setState({ msg: error.msg.msg });\n      } else {\n        this.setState({ msg: null });\n      }\n    }\n\n    // If authenticated, close modal\n    if (this.state.modal) {\n      if (isAuthenticated) {\n        this.toggle();\n      }\n    }\n  }\n\n  toggle = () => {\n    // Clear errors\n    this.props.clearErrors();\n    this.setState({\n      modal: !this.state.modal\n    });\n  };\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const { name, email, password } = this.state;\n\n    // Create user object\n    const newUser = {\n      name,\n      email,\n      password\n    };\n\n    // Attempt to register\n    this.props.register(newUser);\n  };\n\n  render() {\n    return (\n      <div>\n        <NavLink onClick={this.toggle} href='#'>\n          Register\n        </NavLink>\n\n        <Modal isOpen={this.state.modal} toggle={this.toggle}>\n          <ModalHeader toggle={this.toggle}>Register</ModalHeader>\n          <ModalBody>\n            {this.state.msg ? (\n              <Alert color='danger'>{this.state.msg}</Alert>\n            ) : null}\n            <Form onSubmit={this.onSubmit}>\n              <FormGroup>\n              <Label for='userName'>Username</Label>\n                <Input\n                  type='text'\n                  name='username'\n                  id='username'\n                  placeholder='Username'\n                  className='mb-3'\n                  onChange={this.onChange}\n                />\n\n                <Label for='email'>Email</Label>\n                <Input\n                  type='email'\n                  name='email'\n                  id='email'\n                  placeholder='Email'\n                  className='mb-3'\n                  onChange={this.onChange}\n                />\n\n                <Label for='password'>Password</Label>\n                <Input\n                  type='password'\n                  name='password'\n                  id='password'\n                  placeholder='Password'\n                  className='mb-3'\n                  onChange={this.onChange}\n                />\n\n                <Label for='firstName'>First Name</Label>\n                <Input\n                  type='text'\n                  name='firstName'\n                  id='firstName'\n                  placeholder='First Name'\n                  className='mb-3'\n                  onChange={this.onChange}\n                />\n\n                <Label for='lastName'>Last Name</Label>\n                <Input\n                  type='text'\n                  name='lastName'\n                  id='lastName'\n                  placeholder='Last Name'\n                  className='mb-3'\n                  onChange={this.onChange}\n                />\n\n<div className=\"input-group mb-3\">\n  <div className=\"input-group-prepend\">\n    <label className=\"input-group-text\" >Country</label>\n  </div>\n  <select className=\"custom-select\" id=\"country\">\n    <option defaultValue>Choose Country</option>\n    \n    <option name='country'\n            id='country'\n            onChange={this.onChange}>England</option>\n    <option name='country'\n            id='country'\n            onChange={this.onChange}>France</option>\n    <option name='country'\n            id='country'\n            onChange={this.onChange}>Germany</option>\n    <option name='country'\n            id='country'\n            onChange={this.onChange}>Holand</option>\n    <option name='country'\n            id='country'\n            onChange={this.onChange}>Ireland</option>\n    <option name='country'\n            id='country'\n            onChange={this.onChange}>Spain</option>\n    <option name='country'\n            id='country'\n            onChange={this.onChange}>United State</option>\n  </select>\n</div>\n                <Button color='dark' style={{ marginTop: '2rem' }} block>\n                  Register\n                </Button>\n              </FormGroup>\n            </Form>\n          </ModalBody>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error\n});\n\nexport default connect(\n  mapStateToProps,\n  { register, clearErrors }\n)(Register);"]},"metadata":{},"sourceType":"module"}