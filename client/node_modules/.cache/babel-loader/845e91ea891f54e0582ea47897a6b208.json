{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\loupi\\\\Documents\\\\GitHub\\\\my-app\\\\client\\\\src\\\\component\\\\LogInGoogle.jsx\";\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport firebase from '../initializers/firebase';\nimport { logInGoogle } from '../actions/authActions';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nclass LogInGoogle extends React.Component {\n  constructor(props) {\n    super(props);\n    this.login = this.login.bind(this);\n    this.logout = this.logout.bind(this);\n    this.state = {\n      userLoggedIn: false\n    };\n  }\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.setState({\n          userLoggedIn: true\n        });\n      } else {\n        this.setState({\n          userLoggedIn: false\n        });\n      }\n    });\n  }\n\n  login() {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    firebase.auth().signInWithPopup(provider).then(res => {\n      console.log(res);\n      this.props.logInGoogle(res.credential);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  logout() {\n    firebase.auth().signOut().then(result => {\n      console.log(result);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  showButton() {\n    if (this.state.userLoggedIn) {\n      return React.createElement(Button, {\n        variant: \"contained\",\n        onClick: this.logout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"LogOut  Google\");\n    } else {\n      return React.createElement(Button, {\n        variant: \"contained\",\n        onClick: this.login,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"LogIn With google\");\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, this.showButton());\n  }\n\n}\n\nLogInGoogle.propTypes = {\n  isAuthenticated: PropTypes.bool,\n  logInGoogle: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, {\n  logInGoogle\n})(LogInGoogle);","map":{"version":3,"sources":["C:/Users/loupi/Documents/GitHub/my-app/client/src/component/LogInGoogle.jsx"],"names":["React","Button","firebase","logInGoogle","PropTypes","connect","LogInGoogle","Component","constructor","props","login","bind","logout","state","userLoggedIn","componentDidMount","auth","onAuthStateChanged","user","setState","provider","GoogleAuthProvider","signInWithPopup","then","res","console","log","credential","catch","err","signOut","result","showButton","render","propTypes","isAuthenticated","bool","func","isRequired","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AAEA,SAASC,WAAT,QAA4B,wBAA5B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,WAAN,SAA0BN,KAAK,CAACO,SAAhC,CAAyC;AACzCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW,KAAKA,KAAL,CAAWC,IAAX,CAAgB,IAAhB,CAAX;AACA,SAAKC,MAAL,GAAY,KAAKA,MAAL,CAAYD,IAAZ,CAAiB,IAAjB,CAAZ;AACA,SAAKE,KAAL,GAAa;AACTC,MAAAA,YAAY,EAAC;AADJ,KAAb;AAGH;;AAODC,EAAAA,iBAAiB,GAAE;AACfb,IAAAA,QAAQ,CAACc,IAAT,GAAgBC,kBAAhB,CAAoCC,IAAD,IAAQ;AAC/C,UAAGA,IAAH,EAAQ;AACJ,aAAKC,QAAL,CAAc;AACVL,UAAAA,YAAY,EAAE;AADJ,SAAd;AAGH,OAJD,MAIK;AACD,aAAKK,QAAL,CAAc;AACVL,UAAAA,YAAY,EAAE;AADJ,SAAd;AAGH;AACI,KAVD;AAWH;;AAIDJ,EAAAA,KAAK,GAAE;AACH,UAAMU,QAAQ,GAAG,IAAIlB,QAAQ,CAACc,IAAT,CAAcK,kBAAlB,EAAjB;AAEAnB,IAAAA,QAAQ,CAACc,IAAT,GAAgBM,eAAhB,CAAgCF,QAAhC,EACCG,IADD,CACMC,GAAG,IAAI;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,WAAKf,KAAL,CAAWN,WAAX,CAAuBqB,GAAG,CAACG,UAA3B;AACF,KAJD,EAIGC,KAJH,CAISC,GAAG,IAAG;AAEXJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AAEH,KARD;AASH;;AAGDjB,EAAAA,MAAM,GAAE;AACJV,IAAAA,QAAQ,CAACc,IAAT,GAAgBc,OAAhB,GACCP,IADD,CACMQ,MAAM,IAAI;AACZN,MAAAA,OAAO,CAACC,GAAR,CAAYK,MAAZ;AACH,KAHD,EAGGH,KAHH,CAGSC,GAAG,IAAG;AACXJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACH,KALD;AAMH;;AAEDG,EAAAA,UAAU,GAAE;AACR,QAAG,KAAKnB,KAAL,CAAWC,YAAd,EAA2B;AACvB,aAAO,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,OAAO,EAAE,KAAKF,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAP;AAGH,KAJD,MAIK;AACD,aAAO,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,OAAO,EAAE,KAAKF,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAP;AAGH;AACJ;;AAGGuB,EAAAA,MAAM,GAAE;AAEJ,WACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEC,KAAKD,UAAL,EAFD,CADA;AAOH;;AA7EoC;;AAAnC1B,W,CAUC4B,S,GAAY;AACfC,EAAAA,eAAe,EAAE/B,SAAS,CAACgC,IADZ;AAEfjC,EAAAA,WAAW,EAAEC,SAAS,CAACiC,IAAV,CAAeC;AAFb,C;;AAsEnB,MAAMC,eAAe,GAAG1B,KAAK,KAAK;AAC9BsB,EAAAA,eAAe,EAAEtB,KAAK,CAACG,IAAN,CAAWmB;AADE,CAAL,CAA7B;;AAIA,eAAe9B,OAAO,CAClBkC,eADkB,EAElB;AAAEpC,EAAAA;AAAF,CAFkB,CAAP,CAGXG,WAHW,CAAf","sourcesContent":["import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport firebase from '../initializers/firebase';\r\n\r\nimport { logInGoogle } from '../actions/authActions';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nclass LogInGoogle extends React.Component{\r\nconstructor(props){\r\n    super(props);\r\n    this.login=this.login.bind(this);\r\n    this.logout=this.logout.bind(this)\r\n    this.state = {\r\n        userLoggedIn:false\r\n    };\r\n}\r\n\r\nstatic propTypes = {\r\n    isAuthenticated: PropTypes.bool,\r\n    logInGoogle: PropTypes.func.isRequired,\r\n  };\r\n\r\ncomponentDidMount(){\r\n    firebase.auth().onAuthStateChanged((user)=>{\r\nif(user){\r\n    this.setState({\r\n        userLoggedIn: true\r\n    })\r\n}else{\r\n    this.setState({\r\n        userLoggedIn: false\r\n    })\r\n}\r\n    })\r\n}\r\n\r\n\r\n\r\nlogin(){\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n  \r\n    firebase.auth().signInWithPopup(provider)\r\n    .then(res => {\r\n       console.log(res)\r\n       this.props.logInGoogle(res.credential)\r\n    }).catch(err =>{\r\n        \r\n        console.log(err)\r\n\r\n    })\r\n}\r\n\r\n\r\nlogout(){\r\n    firebase.auth().signOut()\r\n    .then(result => { \r\n        console.log(result)\r\n    }).catch(err =>{\r\n        console.log(err)\r\n    })\r\n}\r\n\r\nshowButton(){\r\n    if(this.state.userLoggedIn){\r\n        return <Button variant=\"contained\" onClick={this.logout} >\r\n        LogOut  Google\r\n        </Button>\r\n    }else{\r\n        return <Button variant=\"contained\" onClick={this.login}>\r\n        LogIn With google\r\n        </Button >\r\n    }\r\n}\r\n\r\n\r\n    render(){\r\n\r\n        return(\r\n        <div>\r\n        \r\n        {this.showButton()}\r\n\r\n        </div>\r\n        ) \r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n  });\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { logInGoogle }\r\n  )(LogInGoogle);"]},"metadata":{},"sourceType":"module"}