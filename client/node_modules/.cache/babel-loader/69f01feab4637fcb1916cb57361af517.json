{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\me\\\\Documents\\\\GitHub\\\\my-app\\\\client\\\\src\\\\component\\\\CitiesList.jsx\";\nimport React, { Component } from 'react';\nimport { ListGroup, ListGroupItem } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { getItems } from '../actions/itemActions';\nimport PropTypes from 'prop-types';\n\nclass ItemList extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = e => {\n      this.setState({\n        cityFilter: e.target.value\n      });\n      filteredCities.onChange(event.target.value);\n    };\n\n    this.state = {\n      cities: [],\n      filteredCities: [],\n      cityFilter: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.props.getItems();\n    this.setState({\n      cities: this.props.item,\n      filteredCities: cities\n    });\n  }\n\n  render() {\n    const items = this.props.item.items;\n\n    filterCities = cityFilter => {\n      let filterCities = this.state.cities;\n      filterCities = filterCities.filter(city => {\n        let cityName = city.name.toLowerCase();\n        return cityName.indexOf(cityFilter.toLowerCase()) !== -1;\n      });\n      this.setState({\n        filterCities\n      });\n    };\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"filter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Filter by Cities: \"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"filter\",\n      value: this.state.cityFilter,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })), React.createElement(ListGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, filterCities.map(({\n      name\n    }) => React.createElement(ListGroupItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \" \", name, \" \"))));\n  }\n\n}\n\nItemList.propTypes = {\n  getItems: PropTypes.func.isRequired,\n  item: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  item: state.item\n});\n\nexport default connect(mapStateToProps, {\n  getItems\n})(ItemList);","map":{"version":3,"sources":["C:/Users/me/Documents/GitHub/my-app/client/src/component/CitiesList.jsx"],"names":["React","Component","ListGroup","ListGroupItem","connect","getItems","PropTypes","ItemList","constructor","handleChange","e","setState","cityFilter","target","value","filteredCities","onChange","event","state","cities","componentDidMount","props","item","render","items","filterCities","filter","city","cityName","name","toLowerCase","indexOf","map","propTypes","func","isRequired","object","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,EAAoBC,aAApB,QAAyC,YAAzC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,QAAN,SAAuBN,SAAvB,CAAgC;AAC5BO,EAAAA,WAAW,GAAG;AACV;;AADU,SAmBdC,YAnBc,GAmBEC,CAAD,IAAO;AAClB,WAAKC,QAAL,CAAc;AACVC,QAAAA,UAAU,EAAEF,CAAC,CAACG,MAAF,CAASC;AADX,OAAd;AAGAC,MAAAA,cAAc,CAACC,QAAf,CAAwBC,KAAK,CAACJ,MAAN,CAAaC,KAArC;AACD,KAxBW;;AAEV,SAAKI,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,EADG;AAEXJ,MAAAA,cAAc,EAAE,EAFL;AAGXH,MAAAA,UAAU,EAAE;AAHD,KAAb;AAKD;;AAEHQ,EAAAA,iBAAiB,GAAG;AACjB,SAAKC,KAAL,CAAWhB,QAAX;AACA,SAAKM,QAAL,CAAc;AACbQ,MAAAA,MAAM,EAAG,KAAKE,KAAL,CAAWC,IADP;AAEbP,MAAAA,cAAc,EAAEI;AAFH,KAAd;AAKF;;AAaDI,EAAAA,MAAM,GAAE;AAAA,UACIC,KADJ,GACa,KAAKH,KAAL,CAAWC,IADxB,CACIE,KADJ;;AAGJC,IAAAA,YAAY,GAAIb,UAAD,IAAgB;AAC3B,UAAIa,YAAY,GAAG,KAAKP,KAAL,CAAWC,MAA9B;AACAM,MAAAA,YAAY,GAAGA,YAAY,CAACC,MAAb,CAAqBC,IAAD,IAAU;AAC3C,YAAIC,QAAQ,GAAGD,IAAI,CAACE,IAAL,CAAUC,WAAV,EAAf;AACA,eAAOF,QAAQ,CAACG,OAAT,CACLnB,UAAU,CAACkB,WAAX,EADK,MACyB,CAAC,CADjC;AAED,OAJc,CAAf;AAKA,WAAKnB,QAAL,CAAc;AACZc,QAAAA;AADY,OAAd;AAGD,KAVH;;AAeA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,EAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC,QAAtB;AACA,MAAA,KAAK,EAAE,KAAKP,KAAL,CAAWN,UADlB;AAEA,MAAA,QAAQ,EAAE,KAAKH,YAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADA,EAUJ,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKgB,YAAY,CAACO,GAAb,CAAiB,CAAC;AAACH,MAAAA;AAAD,KAAD,KAClB,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAiBA,IAAjB,MADC,CADL,CAVI,CADJ;AAmBH;;AAnE2B;;AAsEhCtB,QAAQ,CAAC0B,SAAT,GAAqB;AACjB5B,EAAAA,QAAQ,EAAEC,SAAS,CAAC4B,IAAV,CAAeC,UADR;AAEjBb,EAAAA,IAAI,EAAEhB,SAAS,CAAC8B,MAAV,CAAiBD;AAFN,CAArB;;AAMA,MAAME,eAAe,GAAInB,KAAD,KAAY;AAChCI,EAAAA,IAAI,EAAEJ,KAAK,CAACI;AADoB,CAAZ,CAAxB;;AAIA,eAAelB,OAAO,CAACiC,eAAD,EAAkB;AAAEhC,EAAAA;AAAF,CAAlB,CAAP,CAAuCE,QAAvC,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { ListGroup, ListGroupItem } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { getItems } from '../actions/itemActions';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ItemList extends Component{\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n          cities: [],\r\n          filteredCities: [],\r\n          cityFilter: \"\"\r\n        }\r\n      }\r\n\r\n    componentDidMount() {\r\n       this.props.getItems()\r\n       this.setState({\r\n        cities : this.props.item,\r\n        filteredCities: cities\r\n      })\r\n       \r\n    }\r\n\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            cityFilter: e.target.value\r\n        })\r\n        filteredCities.onChange(event.target.value)\r\n      }\r\n\r\n\r\n\r\n\r\n    render(){\r\n        const { items }= this.props.item;\r\n\r\n        filterCities = (cityFilter) => {\r\n            let filterCities = this.state.cities\r\n            filterCities = filterCities.filter((city) => {\r\n              let cityName = city.name.toLowerCase()\r\n              return cityName.indexOf(\r\n                cityFilter.toLowerCase()) !== -1\r\n            })\r\n            this.setState({\r\n              filterCities\r\n            })\r\n          }\r\n\r\n\r\n\r\n        \r\n        return(\r\n            <div>\r\n            <div>\r\n                <label htmlFor=\"filter\">Filter by Cities: </label>\r\n                <input type=\"text\" id=\"filter\" \r\n                value={this.state.cityFilter} \r\n                onChange={this.handleChange}/>\r\n            </div>\r\n\r\n\r\n            \r\n        <ListGroup>\r\n            {filterCities.map(({name}) => (\r\n            <ListGroupItem> {name} </ListGroupItem>\r\n            ))}\r\n        </ListGroup>\r\n        </div>\r\n    \r\n        );\r\n    }\r\n}\r\n\r\nItemList.propTypes = {\r\n    getItems: PropTypes.func.isRequired,\r\n    item: PropTypes.object.isRequired\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    item: state.item\r\n})\r\n\r\nexport default connect(mapStateToProps, { getItems })(ItemList);"]},"metadata":{},"sourceType":"module"}