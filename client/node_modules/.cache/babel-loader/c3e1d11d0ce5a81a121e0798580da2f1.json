{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\me\\\\Documents\\\\GitHub\\\\my-app\\\\client\\\\src\\\\component\\\\CitiesList.jsx\";\nimport React, { Component } from 'react';\nimport { ListGroup, ListGroupItem } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { getItems } from '../actions/itemActions';\nimport PropTypes from 'prop-types';\n\nclass ItemList extends Component {\n  constructor() {\n    super();\n    this.state = {\n      cities: [],\n      filteredCities: [],\n      cityFilter: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.props.getItems();\n  }\n\n  render() {\n    const items = this.props.item.items;\n\n    filterCities = cityFilter => {\n      let filterCities = this.state.cities;\n      filterCities = filterCities.filter(city => {\n        let cityName = city.name.toLowerCase();\n        return cityName.indexOf(cityFilter.toLowerCase()) !== -1;\n      });\n      this.setState({\n        filterCities\n      });\n    };\n\n    return React.createElement(ListGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, filterCities.map(({\n      name\n    }) => React.createElement(ListGroupItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \" \", name, \" \")));\n  }\n\n}\n\nItemList.propTypes = {\n  getItems: PropTypes.func.isRequired,\n  item: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  item: state.item\n});\n\nexport default connect(mapStateToProps, {\n  getItems\n})(ItemList);","map":{"version":3,"sources":["C:/Users/me/Documents/GitHub/my-app/client/src/component/CitiesList.jsx"],"names":["React","Component","ListGroup","ListGroupItem","connect","getItems","PropTypes","ItemList","constructor","state","cities","filteredCities","cityFilter","componentDidMount","props","render","items","item","filterCities","filter","city","cityName","name","toLowerCase","indexOf","setState","map","propTypes","func","isRequired","object","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,EAAoBC,aAApB,QAAyC,YAAzC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,QAAN,SAAuBN,SAAvB,CAAgC;AAC5BO,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,EADG;AAEXC,MAAAA,cAAc,EAAE,EAFL;AAGXC,MAAAA,UAAU,EAAE;AAHD,KAAb;AAKD;;AAEHC,EAAAA,iBAAiB,GAAG;AACjB,SAAKC,KAAL,CAAWT,QAAX;AACF;;AAKDU,EAAAA,MAAM,GAAE;AAAA,UACIC,KADJ,GACa,KAAKF,KAAL,CAAWG,IADxB,CACID,KADJ;;AAGJE,IAAAA,YAAY,GAAIN,UAAD,IAAgB;AAC3B,UAAIM,YAAY,GAAG,KAAKT,KAAL,CAAWC,MAA9B;AACAQ,MAAAA,YAAY,GAAGA,YAAY,CAACC,MAAb,CAAqBC,IAAD,IAAU;AAC3C,YAAIC,QAAQ,GAAGD,IAAI,CAACE,IAAL,CAAUC,WAAV,EAAf;AACA,eAAOF,QAAQ,CAACG,OAAT,CACLZ,UAAU,CAACW,WAAX,EADK,MACyB,CAAC,CADjC;AAED,OAJc,CAAf;AAKA,WAAKE,QAAL,CAAc;AACZP,QAAAA;AADY,OAAd;AAGD,KAVH;;AAeA,WAEA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKA,YAAY,CAACQ,GAAb,CAAiB,CAAC;AAACJ,MAAAA;AAAD,KAAD,KAClB,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAiBA,IAAjB,MADC,CADL,CAFA;AASH;;AA5C2B;;AA+ChCf,QAAQ,CAACoB,SAAT,GAAqB;AACjBtB,EAAAA,QAAQ,EAAEC,SAAS,CAACsB,IAAV,CAAeC,UADR;AAEjBZ,EAAAA,IAAI,EAAEX,SAAS,CAACwB,MAAV,CAAiBD;AAFN,CAArB;;AAMA,MAAME,eAAe,GAAItB,KAAD,KAAY;AAChCQ,EAAAA,IAAI,EAAER,KAAK,CAACQ;AADoB,CAAZ,CAAxB;;AAIA,eAAeb,OAAO,CAAC2B,eAAD,EAAkB;AAAE1B,EAAAA;AAAF,CAAlB,CAAP,CAAuCE,QAAvC,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { ListGroup, ListGroupItem } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { getItems } from '../actions/itemActions';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ItemList extends Component{\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n          cities: [],\r\n          filteredCities: [],\r\n          cityFilter: \"\"\r\n        }\r\n      }\r\n\r\n    componentDidMount() {\r\n       this.props.getItems()\r\n    }\r\n\r\n\r\n\r\n\r\n    render(){\r\n        const { items }= this.props.item;\r\n\r\n        filterCities = (cityFilter) => {\r\n            let filterCities = this.state.cities\r\n            filterCities = filterCities.filter((city) => {\r\n              let cityName = city.name.toLowerCase()\r\n              return cityName.indexOf(\r\n                cityFilter.toLowerCase()) !== -1\r\n            })\r\n            this.setState({\r\n              filterCities\r\n            })\r\n          }\r\n\r\n\r\n\r\n        \r\n        return(\r\n            \r\n        <ListGroup>\r\n            {filterCities.map(({name}) => (\r\n            <ListGroupItem> {name} </ListGroupItem>\r\n            ))}\r\n        </ListGroup>\r\n    \r\n        );\r\n    }\r\n}\r\n\r\nItemList.propTypes = {\r\n    getItems: PropTypes.func.isRequired,\r\n    item: PropTypes.object.isRequired\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    item: state.item\r\n})\r\n\r\nexport default connect(mapStateToProps, { getItems })(ItemList);"]},"metadata":{},"sourceType":"module"}