{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\loupi\\\\Documents\\\\GitHub\\\\my-app\\\\client\\\\src\\\\component\\\\CitiesList.jsx\";\nimport React, { Component } from 'react';\nimport { ListGroup, ListGroupItem } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { getItems } from '../actions/itemActions';\nimport { getFilter } from '../actions/itemActions';\nimport PropTypes from 'prop-types';\nimport { Link } from \"react-router-dom\";\n\nclass CitiesList extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = e => {\n      this.setState({\n        cityFilter: e.target.value\n      });\n      this.filterCities(this.state.cityFilter);\n    };\n\n    this.state = {\n      filteredCities: [],\n      cityFilter: \"\"\n    };\n  }\n\n  async componentDidMount() {\n    await this.props.getItems();\n    await this.setState({\n      filteredCities: this.props.item.items\n    });\n  }\n\n  filterCities(e) {\n    let filteredCities = this.props.item.items;\n    filteredCities = filteredCities.filter(city => {\n      let cityName = city.name.toLowerCase();\n      return cityName.indexOf(e.target.value.toLowerCase()) !== -1;\n    });\n    this.setState({\n      filteredCities\n    });\n    this.props.getFilter(filteredCities);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"filter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Filter by Cities: \"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"filter\",\n      onChange: this.filterCities.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })), this.state.filteredCities ? React.createElement(ListGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, this.state.filteredCities.map(items => React.createElement(ListGroupItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/Cities/\".concat(items._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \" \", items.name)))) : null);\n  }\n\n}\n\nCitiesList.propTypes = {\n  getItems: PropTypes.func.isRequired,\n  item: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  item: state.item\n});\n\nexport default connect(mapStateToProps, {\n  getItems,\n  getFilter\n})(CitiesList);","map":{"version":3,"sources":["C:/Users/loupi/Documents/GitHub/my-app/client/src/component/CitiesList.jsx"],"names":["React","Component","ListGroup","ListGroupItem","connect","getItems","getFilter","PropTypes","Link","CitiesList","constructor","handleChange","e","setState","cityFilter","target","value","filterCities","state","filteredCities","componentDidMount","props","item","items","filter","city","cityName","name","toLowerCase","indexOf","render","bind","map","concat","_id","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { ListGroup, ListGroupItem } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { getItems } from '../actions/itemActions';\r\nimport { getFilter } from '../actions/itemActions';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass CitiesList extends Component{\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n          filteredCities: [],\r\n          cityFilter: \"\"\r\n        }\r\n      }\r\n\r\n    async componentDidMount() {\r\n        \r\n       await this.props.getItems();\r\n       await this.setState({\r\n        filteredCities: this.props.item.items\r\n      })\r\n       \r\n       \r\n    }\r\n\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            cityFilter: e.target.value\r\n        })\r\n        this.filterCities(this.state.cityFilter)\r\n      }\r\n\r\n      filterCities (e) {\r\n        let filteredCities = this.props.item.items\r\n        filteredCities = filteredCities.filter((city) => {\r\n          let cityName = city.name.toLowerCase()\r\n          return cityName.indexOf(\r\n            e.target.value.toLowerCase()) !== -1\r\n        })\r\n        this.setState({\r\n          filteredCities\r\n        })\r\n       this.props.getFilter(filteredCities)\r\n      }\r\n\r\n\r\n    render(){\r\n    \r\n        return(\r\n          \r\n            <div>\r\n            <div>\r\n                <label htmlFor=\"filter\">Filter by Cities: </label>\r\n                <input type=\"text\" id=\"filter\" \r\n                \r\n                onChange={this.filterCities.bind(this)}/>\r\n            </div>\r\n\r\n\r\n            {this.state.filteredCities?\r\n            \r\n        <ListGroup>\r\n            {this.state.filteredCities.map((items) => (\r\n            <ListGroupItem>\r\n\r\n            <Link to={\"/Cities/\".concat(items._id)}> {items.name}</Link> \r\n            \r\n            </ListGroupItem>\r\n            ))}\r\n        </ListGroup>:null\r\n        }\r\n        </div>\r\n    \r\n        );\r\n    }\r\n}\r\n\r\nCitiesList.propTypes = {\r\n    getItems: PropTypes.func.isRequired,\r\n    item: PropTypes.object.isRequired\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    item: state.item\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps, { getItems, getFilter })(CitiesList);"]},"metadata":{},"sourceType":"module"}