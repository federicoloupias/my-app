{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\me\\\\Documents\\\\GitHub\\\\my-app\\\\client\\\\src\\\\component\\\\Itinerary.jsx\";\nimport React, { Component } from 'react';\nimport { ListGroup, ListGroupItem } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { getItineraries } from '../actions/itineraryActions';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport ButtonBase from '@material-ui/core/ButtonBase';\n\nclass ItineraryList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.isOpen = useState(false);\n    this.setIsOpen = useState(false);\n\n    this.toggle = () => setIsOpen(!isOpen);\n  }\n\n  async componentDidMount() {\n    let cityId = this.props.match.params.cityId;\n    await this.props.getItineraries(cityId);\n  }\n\n  render() {\n    // const { itineraries } = this.props.itineraries;\n    return React.createElement(ListGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, this.props.itineraries.map(itineraries => React.createElement(ListGroupItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \" \", itineraries.title, \" \")));\n  }\n\n} // ItineraryList.propTypes = {\n//     getItineraries: PropTypes.func.isRequired,\n//     itineraries: PropTypes.object.isRequired\n// }\n\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    itineraries: state.itinerario.itineraries\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getItineraries: cityId => dispatch(getItineraries(cityId))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ItineraryList);","map":{"version":3,"sources":["C:/Users/me/Documents/GitHub/my-app/client/src/component/Itinerary.jsx"],"names":["React","Component","ListGroup","ListGroupItem","connect","getItineraries","makeStyles","Grid","Paper","Typography","ButtonBase","ItineraryList","isOpen","useState","setIsOpen","toggle","componentDidMount","cityId","props","match","params","render","itineraries","map","title","mapStateToProps","state","console","log","itinerario","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,EAAoBC,aAApB,QAAyC,YAAzC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,6BAA/B;AAEA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;;AAEA,MAAMC,aAAN,SAA4BV,SAA5B,CAAqC;AAAA;AAAA;AAAA,SAMhCW,MANgC,GAMvBC,QAAQ,CAAC,KAAD,CANe;AAAA,SAQhCC,SARgC,GAQpBD,QAAQ,CAAC,KAAD,CARY;;AAAA,SAUhCE,MAVgC,GAUvB,MAAMD,SAAS,CAAC,CAACF,MAAF,CAVQ;AAAA;;AAEjC,QAAMI,iBAAN,GAA0B;AACxB,QAAIC,MAAM,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAArC;AACC,UAAM,KAAKC,KAAL,CAAWb,cAAX,CAA0BY,MAA1B,CAAN;AACF;;AAQDI,EAAAA,MAAM,GAAE;AACN;AAIE,WAEA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKH,KAAL,CAAWI,WAAX,CAAuBC,GAAvB,CAA4BD,WAAD,IAC5B,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAiBA,WAAW,CAACE,KAA7B,MADC,CADL,CAFA;AASH;;AA3BgC,C,CA8BrC;AACA;AACA;AACA;;;AAGA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,SAAO;AACLJ,IAAAA,WAAW,EAAEI,KAAK,CAACG,UAAN,CAAiBP;AADzB,GAAP;AAGD,CALD;;AAOA,MAAMQ,kBAAkB,GAAIC,QAAD,IAAc;AAEvC,SAAO;AACL1B,IAAAA,cAAc,EAAGY,MAAD,IAAUc,QAAQ,CAAC1B,cAAc,CAACY,MAAD,CAAf;AAD7B,GAAP;AAGD,CALD;;AAOA,eAAeb,OAAO,CAACqB,eAAD,EAAkBK,kBAAlB,CAAP,CAA6CnB,aAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { ListGroup, ListGroupItem } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { getItineraries } from '../actions/itineraryActions';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ButtonBase from '@material-ui/core/ButtonBase';\r\n\r\nclass ItineraryList extends Component{\r\n   \r\n    async componentDidMount() {\r\n      let cityId = this.props.match.params.cityId\r\n       await this.props.getItineraries(cityId)\r\n    }\r\n     isOpen = useState(false);\r\n\r\n     setIsOpen = useState(false);\r\n\r\n     toggle = () => setIsOpen(!isOpen);\r\n\r\n\r\n    render(){\r\n      // const { itineraries } = this.props.itineraries;\r\n\r\n\r\n\r\n        return(\r\n\r\n        <ListGroup>\r\n            {this.props.itineraries.map((itineraries) => (\r\n            <ListGroupItem> {itineraries.title} </ListGroupItem>\r\n            ))}\r\n        </ListGroup>\r\n\r\n        );\r\n    }\r\n}\r\n\r\n// ItineraryList.propTypes = {\r\n//     getItineraries: PropTypes.func.isRequired,\r\n//     itineraries: PropTypes.object.isRequired\r\n// }\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state)\r\n  return {\r\n    itineraries: state.itinerario.itineraries\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  \r\n  return {\r\n    getItineraries: (cityId)=>dispatch(getItineraries(cityId))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ItineraryList);"]},"metadata":{},"sourceType":"module"}