{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\me\\\\Documents\\\\GitHub\\\\my-app\\\\client\\\\src\\\\component\\\\Itinerary.jsx\";\nimport React, { Component } from 'react';\nimport { ListGroup, ListGroupItem, Collapse, Button, CardBody, Card } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { getItineraries } from '../actions/itineraryActions';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport ButtonBase from '@material-ui/core/ButtonBase';\n\nclass ItineraryList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = () => {\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n    };\n\n    this.state = {\n      isOpen: false\n    };\n  }\n\n  async componentDidMount() {\n    let cityId = this.props.match.params.cityId;\n    await this.props.getItineraries(cityId);\n  }\n\n  render() {\n    // const { itineraries } = this.props.itineraries;\n    console.log(this.isOpen);\n    return React.createElement(ListGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, this.props.itineraries.map(itineraries => React.createElement(ListGroupItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, itineraries.title, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(Button, {\n      color: \"primary\",\n      onClick: this.toggle,\n      style: {\n        marginBottom: '1rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Toggle\"), React.createElement(Collapse, {\n      isOpen: this.isOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident.\"))))));\n  }\n\n} // ItineraryList.propTypes = {\n//     getItineraries: PropTypes.func.isRequired,\n//     itineraries: PropTypes.object.isRequired\n// }\n\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    itineraries: state.itinerario.itineraries\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getItineraries: cityId => dispatch(getItineraries(cityId))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ItineraryList);","map":{"version":3,"sources":["C:/Users/me/Documents/GitHub/my-app/client/src/component/Itinerary.jsx"],"names":["React","Component","ListGroup","ListGroupItem","Collapse","Button","CardBody","Card","connect","getItineraries","makeStyles","Grid","Paper","Typography","ButtonBase","ItineraryList","constructor","props","toggle","setState","isOpen","state","componentDidMount","cityId","match","params","render","console","log","itineraries","map","title","marginBottom","mapStateToProps","itinerario","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,EAAoBC,aAApB,EAAmCC,QAAnC,EAA6CC,MAA7C,EAAqDC,QAArD,EAA+DC,IAA/D,QAA4E,YAA5E;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,6BAA/B;AAEA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;;AAEA,MAAMC,aAAN,SAA4Bd,SAA5B,CAAqC;AAEnCe,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAahBC,MAbgB,GAaP,MAAM;AAEd,WAAKC,QAAL,CAAc;AACZC,QAAAA,MAAM,EAAE,CAAC,KAAKC,KAAL,CAAWD;AADR,OAAd;AAGD,KAlBgB;;AAEjB,SAAKC,KAAL,GAAa;AACXD,MAAAA,MAAM,EAAE;AADG,KAAb;AAGD;;AAEC,QAAME,iBAAN,GAA0B;AACxB,QAAIC,MAAM,GAAG,KAAKN,KAAL,CAAWO,KAAX,CAAiBC,MAAjB,CAAwBF,MAArC;AACC,UAAM,KAAKN,KAAL,CAAWR,cAAX,CAA0Bc,MAA1B,CAAN;AACF;;AAUDG,EAAAA,MAAM,GAAE;AACN;AAGAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKR,MAAjB;AAEE,WAEA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKH,KAAL,CAAWY,WAAX,CAAuBC,GAAvB,CAA4BD,WAAD,IAC5B,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,WAAW,CAACE,KADf,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAwB,MAAA,OAAO,EAAE,KAAKb,MAAtC;AAA8C,MAAA,KAAK,EAAE;AAAEc,QAAAA,YAAY,EAAE;AAAhB,OAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,EAIN,oBAAC,QAAD;AAAU,MAAA,MAAM,EAAE,KAAKZ,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2MADF,CADF,CAJM,CADC,CADL,CAFA;AAwBH;;AApDgC,C,CAuDrC;AACA;AACA;AACA;;;AAGA,MAAMa,eAAe,GAAIZ,KAAD,IAAW;AACjCM,EAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AACA,SAAO;AACLQ,IAAAA,WAAW,EAAER,KAAK,CAACa,UAAN,CAAiBL;AADzB,GAAP;AAGD,CALD;;AAOA,MAAMM,kBAAkB,GAAIC,QAAD,IAAc;AAEvC,SAAO;AACL3B,IAAAA,cAAc,EAAGc,MAAD,IAAUa,QAAQ,CAAC3B,cAAc,CAACc,MAAD,CAAf;AAD7B,GAAP;AAGD,CALD;;AAOA,eAAef,OAAO,CAACyB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CpB,aAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { ListGroup, ListGroupItem, Collapse, Button, CardBody, Card  } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { getItineraries } from '../actions/itineraryActions';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ButtonBase from '@material-ui/core/ButtonBase';\r\n\r\nclass ItineraryList extends Component{\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isOpen: false\r\n    };\r\n  }\r\n   \r\n    async componentDidMount() {\r\n      let cityId = this.props.match.params.cityId\r\n       await this.props.getItineraries(cityId)\r\n    }\r\n    \r\n\r\n     toggle = () => {\r\n       \r\n      this.setState({\r\n        isOpen: !this.state.isOpen\r\n      });\r\n    };\r\n\r\n    render(){\r\n      // const { itineraries } = this.props.itineraries;\r\n\r\n\r\n      console.log(this.isOpen)\r\n\r\n        return(\r\n\r\n        <ListGroup>\r\n            {this.props.itineraries.map((itineraries) => (\r\n            <ListGroupItem> \r\n              {itineraries.title} \r\n              <br/>\r\n              <Button color=\"primary\" onClick={this.toggle} style={{ marginBottom: '1rem' }}>Toggle</Button>\r\n      <Collapse isOpen={this.isOpen}>\r\n        <Card>\r\n          <CardBody>\r\n          Anim pariatur cliche reprehenderit,\r\n           enim eiusmod high life accusamus terry richardson ad squid. Nihil\r\n           anim keffiyeh helvetica, craft beer labore wes anderson cred\r\n           nesciunt sapiente ea proident.\r\n          </CardBody>\r\n        </Card>\r\n      </Collapse>\r\n            </ListGroupItem>\r\n            \r\n            ))}\r\n        </ListGroup>\r\n\r\n        );\r\n    }\r\n}\r\n\r\n// ItineraryList.propTypes = {\r\n//     getItineraries: PropTypes.func.isRequired,\r\n//     itineraries: PropTypes.object.isRequired\r\n// }\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state)\r\n  return {\r\n    itineraries: state.itinerario.itineraries\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  \r\n  return {\r\n    getItineraries: (cityId)=>dispatch(getItineraries(cityId))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ItineraryList);"]},"metadata":{},"sourceType":"module"}